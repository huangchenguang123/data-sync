<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chuxing.datasyncservice.dao.FunctionDAO">

    <resultMap id="BaseResultMap" type="com.chuxing.datasyncservice.model.dto.FunctionDTO">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="functionName" column="function_name" jdbcType="VARCHAR"/>
        <result property="script" column="script" jdbcType="VARCHAR"/>
        <result property="createAt" column="create_at" jdbcType="BIGINT"/>
        <result property="updateAt" column="update_at" jdbcType="BIGINT"/>
    </resultMap>

    <select id="getAllFunction" resultMap="BaseResultMap">
        select id, function_name, script, create_at, update_at
        from customize_function
        ;
    </select>

    <select id="getFunctionById" resultMap="BaseResultMap">
        select id, function_name, script, create_at, update_at
        from customize_function
        where id = #{functionId}
        ;
    </select>

    <select id="searchFunction" resultMap="BaseResultMap">
        select id, function_name, script, create_at, update_at
        from customize_function
        <if test="functionName != null and functionName != ''">
            where function_name like concat('%', '/' #{functionName}, '%') escape '/'
        </if>
        order by update_at
        limit #{offset}, #{limit}
        ;
    </select>

    <select id="countFunction" resultType="java.lang.Integer">
        select count(1)
        from customize_function
        <if test="functionName != null and functionName != ''">
            where function_name like concat('%', '/' #{functionName}, '%') escape '/'
        </if>
        ;
    </select>

    <insert id="createFunction">
        insert into customize_function(function_name, script, create_at, update_at)
        values (#{functionDTO.functionName}, #{functionDTO.script}, #{functionDTO.createAt}, #{functionDTO.updateAt})
        ;
    </insert>

    <insert id="updateFunction">
        update customize_function
        set function_name = #{functionDTO.functionName},
            script = #{functionDTO.script},
            update_at = #{functionDTO.updateAt}
            where id = #{functionDTO.id}
    </insert>

    <delete id="deleteFunctionById">
        update customize_function
        set function_name = #{functionDTO.functionName},
            script = #{functionDTO.script},
            update_at = #{functionDTO.updateAt}
        where id = #{functionId}
    </delete>

</mapper>
